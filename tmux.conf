## +FHDR=======================================================================
## Filename         : .tmux.conf
## File Description : Tmux configuration
## ----------------------------------------------------------------------------
## Author           : Edward Yeh
## Created On       : Mon Jun 10 00:50:56 CST 2019
## -FHDR=======================================================================

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | sed 's/[^0-9.]//g')"

#----------------------------------------
#--- Global Setting
#----------------------------------------

# scrollback buffer n lines
set-option -g history-limit 5000

# listen for activity on all windows 
set-option -g bell-action any

# tell tmux to use 256 colour terminal
set-option -g default-terminal "screen-256color"

# start window indexing at 1 window so the <prefix> 1 is easier to reach
set-option -g base-index 1
set-option -g pane-base-index 1 

# control automatic window renaming
setw -g automatic-rename off
setw -g allow-rename off

# enable mouse control
set-option -g mouse on

# set copy-mode style
setw -g mode-keys vi

#----------------------------------------
#--- Key Bindings
#----------------------------------------

### General ############################

# set <prefix> key to C-a
set-option -g prefix C-a

# reload settings
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded.."

### Copy Mode ##########################

# copy start
bind-key -T copy-mode-vi v send-keys -X begin-selection

# copy end
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# copy to clipboard
bind-key C-c run " tmux save-buffer - | xclip -i -sel clipboard"

# paste from clipboard
bind-key C-v run " tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

### Window Setting #####################

# previous window
bind-key -r p select-window -t :-

# next window
bind-key -r n select-window -t :+

### Pane Setting #######################

# create pane
bind-key _ split-window -v -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'

# pane swap
bind-key -r C-u swapp -U
bind-key -r C-d swapp -D

# pane switch
#   k   --- up pane
# h   l --- left pane / right pane
#   j   --- down pane
bind-key -r k select-pane -U
bind-key -r j select-pane -D
bind-key -r h select-pane -L
bind-key -r l select-pane -R

# pane resize (unit: 10 grid)
bind-key -r K resizep -U 10
bind-key -r J resizep -D 10
bind-key -r H resizep -L 10
bind-key -r L resizep -R 10

# pane resize (unit: 5 grid)
bind-key -r M-k resizep -U 5
bind-key -r M-j resizep -D 5
bind-key -r M-h resizep -L 5
bind-key -r M-l resizep -R 5

# pane resize (unit: 1 grid)
bind-key -r C-k resizep -U 1
bind-key -r C-j resizep -D 1
bind-key -r C-h resizep -L 1
bind-key -r C-l resizep -R 1

# join a pane from (pane-to-pane, windows-to-pane)
# join-pane -s [session_name]:[window].[pane]

# send a pane to (pane-to-pane, windows-to-pane)
# join-pane -t [session_name]:[window].[pane]

# break a pane to window
# break-pane

#----------------------------------------
#--- Statusbar Setting
#----------------------------------------

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# default statusbar colors
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "set -g status-fg white \
    set -g status-bg default \
    set -g status-attr default"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
  "set -g status-style fg=white,bg=default"

# default window title colors
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "setw -g window-status-fg white \
    setw -g window-status-bg default \
    setw -g window-status-attr dim"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
  "set -g window-status-style fg=white,bg=default,dim"

# active window title colors
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "setw -g window-status-current-fg cyan \
    setw -g window-status-current-bg default \
    setw -g window-status-current-attr bright \
    setw -g window-status-current-attr underscore"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
  "set -g window-status-current-style fg=cyan,bg=default,bright,underscore"

# command/message line colors
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
  "set -g message-fg white \
    set -g message-bg black \
    set -g message-attr bright"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
  "set -g message-style fg=white,bg=black,bright"

# what to be displayed on the right status
set -g status-interval 1
set -g status-right ' } %Y-%m-%d %H:%M:%S'
set -g status-right-length 60

# what to be displayed on the left status
set -g status-left-length 30
set-option -g status-left "#[fg=green]#(echo $USER)#[default].#[fg=blue]#h#[default] { "

#----------------------------------------
#--- Platform Fix Setting
#----------------------------------------
