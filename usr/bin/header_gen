#! /bin/bash -f

passportname="Hsin-Hsien Yeh"
author="Edward Yeh"
year=$(date +%Y)
times=$(date)
copyright="Copyright (c) $year $passportname ($author)."
type=""
note=""

if [ "$#" -lt 2 ] || \
   [ "$1" != "c" -a "$1" != "h" -a \
     "$1" != "v" -a "$1" != "t" -a "$1" != "f" -a \
     "$1" != "cs" -a "$1" != "bs" -a "$1" != "py" -a \
     "$1" != "d" ]; then

    [ "$#" -ge 3 -a "$3" == "-test" ] && exit 1

    prog=$(basename $0)

    if !([ "$#" -ge 1 -a "$1" == "-list" ]) then
        echo "Usage: $prog <format> <filename>"
    fi

    echo ""
    echo "  format:  c   -- C/C++            "
    echo "           h   -- Header file      "
    echo "           v   -- Verilog          "
    echo "           t   -- Verilog testbench"
    echo "           f   -- Verilog file list"
    echo "           cs  -- C shell script   "
    echo "           bs  -- Bash shell script"
    echo "           py  -- Python script    "
    echo "           d   -- Document         "
    echo ""
    exit 1
fi

[ "$#" -ge 3 -a "$3" == "-test" ] && exit 0

if [ "$1" == "c" -o "$1" == "h" ]; then
    type="C/C++"
    note="//"
elif [ "$1" == "v" -o "$1" == "t" -o "$1" == "f" ]; then
    type="Verilog"
    note="//"
elif [ "$1" == "d" ]; then
    type="Text file"
    note="//"
elif [ "$1" == "bs" -o "$1" == "cs" ]; then
    type="Shell script"
    note="##"
elif [ "$1" == "py" ]; then
    type="Python module"
    note="##"
fi

echo "$note +FHDR======================================================================="
echo "$note $copyright"
echo "$note All rights reserved."
echo "$note ----------------------------------------------------------------------------"
echo "$note Filename         : $2"
echo "$note File Description : "
echo "$note ----------------------------------------------------------------------------"
echo "$note Author           : $author"
echo "$note Created On       : $times"
echo "$note Format           : $type"
echo "$note ----------------------------------------------------------------------------"


if [ "$1" == "c" -o "$1" == "h" ]; then
    echo "$note Reuse Issues     : "
    echo "$note Release History  : "
elif [ "$1" == "v" -o "$1" == "t" ]; then
    echo "$note Reuse Issues     : "
    echo "$note Reset Strategy   : "
    echo "$note Clock Domain     : "
    echo "$note Prefix           : c_<var> - current time"
    echo "$note                    n_<var> - next time"
    echo "$note Postfix          : <var>_n - negtive sensitive signal"
    echo "$note                    <var>_r - flip-flop"
    echo "$note                    <var>_w - wire drives a flip-flop"
    echo "$note                    <var>_s - signed variable"
    echo "$note ----------------------------------------------------------------------------"
    echo "$note Release History  : "
elif [ "$1" == "f" ]; then
    echo "$note Reuse Issues     : "
    echo "$note ----------------------------------------------------------------------------"
    echo "$note Release History  : "
elif [ "$1" == "bs" -o "$1" == "cs" -o "$1" == "py" ]; then
    echo "$note Reuse Issues     : "
    echo "$note ----------------------------------------------------------------------------"
    echo "$note Release History  : "
elif [ "$1" == "d" ]; then
    echo "$note Release History  : "
fi

echo "$note -FHDR======================================================================="
